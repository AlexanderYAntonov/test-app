{"version":3,"file":"expero-test-lib.mjs","sources":["../../../projects/test-lib/src/lib/list.service.ts","../../../projects/test-lib/src/lib/border.directive.ts","../../../projects/test-lib/src/lib/border/border.module.ts","../../../projects/test-lib/src/lib/list/list.component.ts","../../../projects/test-lib/src/lib/list/list.module.ts","../../../projects/test-lib/src/public-api.ts","../../../projects/test-lib/src/expero-test-lib.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListService {\n  timer: any;\n  private list$: Subject<string> = new Subject<string>();\n  list: Observable<string> = this.list$.asObservable();\n\n  constructor() {\n    this.timer = setInterval(this.nextItem.bind(this), 1000);\n  }\n\n  nextItem() {\n    const now = new Date();\n    const currentTime = now.getTime().toString();\n    this.list$.next(currentTime);\n  }\n}\n","import {Directive, ElementRef, OnInit} from '@angular/core';\n\n@Directive({\n  selector: '[tlBorder]'\n})\nexport class BorderDirective implements OnInit {\n  private element$: HTMLElement;\n\n  constructor(elementRef$: ElementRef) {\n    this.element$ = elementRef$.nativeElement;\n  }\n\n  ngOnInit() {\n    this.element$.style.border = 'solid 1px red';\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BorderDirective} from '../border.directive';\n\n@NgModule({\n  declarations: [\n    BorderDirective\n  ],\n  exports: [\n    BorderDirective\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class BorderModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tl-list',\n  template: `\n    <ul>\n      <li *ngFor=\"let item of list\">{{item}}</li>\n    </ul>`,\n  styleUrls: ['./list.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListComponent implements OnInit {\n  @Input()\n  list!: string[];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ListComponent} from './list.component';\n\n@NgModule({\n  declarations: [\n    ListComponent\n  ],\n  exports: [\n    ListComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ListModule {\n}\n","/*\n * Public API Surface of test-lib\n */\n\nexport * from './lib/list.service';\nexport * from './lib/border/border.module';\nexport * from './lib/border.directive';\nexport * from './lib/list/list.module';\nexport * from './lib/list/list.component';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}